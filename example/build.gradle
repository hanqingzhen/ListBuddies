apply plugin: 'com.android.application'

repositories {
    mavenCentral()
}

android {

    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_COMPILE_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION


    defaultConfig {
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionName project.VERSION_NAME
        versionCode Integer.parseInt(project.VERSION_CODE)
    }

    lintOptions {
        abortOnError Boolean.parseBoolean(project.ABORT_ON_ERROR)
    }

    signingConfigs { release }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile libraries.android_support

    compile project(':library')
    //base
    compile 'com.android.support:support-v4:24.0.0'
    compile 'com.android.support:appcompat-v7:24.0.0'

    //retrofit2.0
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'

    //butterknife
    compile 'com.jakewharton:butterknife:5.1.2'

    //okhttp
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    //compile 'com.squareup.okhttp:okhttp:2.0.0'
    //compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'

    //picassco
    compile 'com.squareup.picasso:picasso:2.5.2'

    //glide
    //compile 'com.github.bumptech.glide:glide:3.7.0'


    //umeng
    compile 'com.umeng.analytics:analytics:latest.integration'

    //pugongying
    compile 'com.pgyersdk:sdk:2.4.0'

}

File propFile = file('signing.properties');
if (propFile.exists()) {
    def Properties props = new Properties()
    props.load(new FileInputStream(propFile))

    if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        android.buildTypes.release.signingConfig = null
    }
} else {
    android.buildTypes.release.signingConfig = null
}


